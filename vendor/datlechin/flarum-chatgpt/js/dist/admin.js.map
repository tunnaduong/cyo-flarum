{"version":3,"file":"admin.js","mappings":"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","sources":["webpack://@datlechin/flarum-chatgpt/webpack/bootstrap","webpack://@datlechin/flarum-chatgpt/webpack/runtime/compat get default export","webpack://@datlechin/flarum-chatgpt/webpack/runtime/define property getters","webpack://@datlechin/flarum-chatgpt/webpack/runtime/hasOwnProperty shorthand","webpack://@datlechin/flarum-chatgpt/external root \"flarum.core.compat['admin/app']\"","webpack://@datlechin/flarum-chatgpt/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@datlechin/flarum-chatgpt/external root \"flarum.core.compat['admin/components/ExtensionPage']\"","webpack://@datlechin/flarum-chatgpt/external root \"flarum.core.compat['common/utils/Stream']\"","webpack://@datlechin/flarum-chatgpt/./src/admin/components/ChatGPTSettings.tsx","webpack://@datlechin/flarum-chatgpt/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@datlechin/flarum-chatgpt/./src/admin/index.tsx"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['admin/app'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['admin/components/ExtensionPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/Stream'];","import app from 'flarum/admin/app';\nimport ExtensionPage from 'flarum/admin/components/ExtensionPage';\nimport Stream from 'flarum/common/utils/Stream';\n\nexport default class ChatGPTSettings extends ExtensionPage {\n  loading: boolean = true;\n  models: Stream<Record<string, string>>;\n\n  oninit(vnode: any) {\n    super.oninit(vnode);\n    this.models = Stream<Record<string, string>>({});\n\n    app\n      .request({\n        url: `${app.forum.attribute('apiUrl')}/datlechin-chatgpt/models`,\n        method: 'GET',\n      })\n      .then((response: any) => {\n        const models: Record<string, string> = {};\n        response.forEach((model: { id: string }) => {\n          models[model.id] = model.id;\n        });\n        this.models(models);\n      })\n      .finally(() => {\n        this.loading = false;\n        m.redraw();\n      });\n  }\n\n  content() {\n    return (\n      <div className=\"ExtensionPage-settings\">\n        <div className=\"container\">\n          <div className=\"Form\">\n            {this.buildSettingComponent({\n              setting: 'datlechin-chatgpt.api_key',\n              type: 'text',\n              label: app.translator.trans('datlechin-chatgpt.admin.settings.api_key_label'),\n              help: app.translator.trans('datlechin-chatgpt.admin.settings.api_key_help', {\n                a: <a href=\"https://platform.openai.com/account/api-keys\" target=\"_blank\" rel=\"noopener\" />,\n              }),\n              placeholder: 'sk-...',\n            })}\n            {this.buildSettingComponent({\n              setting: 'datlechin-chatgpt.model',\n              type: 'dropdown',\n              options: this.models(),\n              label: app.translator.trans('datlechin-chatgpt.admin.settings.model_label'),\n              help: app.translator.trans('datlechin-chatgpt.admin.settings.model_help', {\n                a: <a href=\"https://platform.openai.com/docs/models/overview\" target=\"_blank\" rel=\"noopener\" />,\n              }),\n            })}\n            {this.buildSettingComponent({\n              setting: 'datlechin-chatgpt.max_tokens',\n              type: 'number',\n              label: app.translator.trans('datlechin-chatgpt.admin.settings.max_tokens_label'),\n              help: app.translator.trans('datlechin-chatgpt.admin.settings.max_tokens_help', {\n                a: <a href=\"https://help.openai.com/en/articles/4936856\" target=\"_blank\" rel=\"noopener\" />,\n              }),\n              default: 100,\n            })}\n            {this.buildSettingComponent({\n              setting: 'datlechin-chatgpt.user_prompt',\n              type: 'text',\n              label: app.translator.trans('datlechin-chatgpt.admin.settings.user_prompt_label'),\n              help: app.translator.trans('datlechin-chatgpt.admin.settings.user_prompt_help'),\n            })}\n            {this.buildSettingComponent({\n              setting: 'datlechin-chatgpt.user_prompt_badge_text',\n              type: 'text',\n              label: app.translator.trans('datlechin-chatgpt.admin.settings.user_prompt_badge_label'),\n              help: app.translator.trans('datlechin-chatgpt.admin.settings.user_prompt_badge_help'),\n            })}\n            {this.buildSettingComponent({\n              setting: 'datlechin-chatgpt.enable_on_discussion_started',\n              type: 'boolean',\n              label: app.translator.trans('datlechin-chatgpt.admin.settings.enable_on_discussion_started_label'),\n              help: app.translator.trans('datlechin-chatgpt.admin.settings.enable_on_discussion_started_help'),\n            })}\n            {this.buildSettingComponent({\n              type: 'flarum-tags.select-tags',\n              setting: 'datlechin-chatgpt.enabled-tags',\n              label: app.translator.trans('datlechin-chatgpt.admin.settings.enabled_tags_label'),\n              help: app.translator.trans('datlechin-chatgpt.admin.settings.enabled_tags_help'),\n              options: {\n                requireParentTag: false,\n                limits: {\n                  max: {\n                    secondary: 0,\n                  },\n                },\n              },\n            })}\n            <div className=\"Form-group\">{this.submitButton()}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","import app from 'flarum/admin/app';\nimport ChatGPTSettings from './components/ChatGPTSettings';\n\napp.initializers.add('datlechin/flarum-chatgpt', () => {\n  app.extensionData\n    .for('datlechin-chatgpt')\n    .registerPermission(\n      {\n        label: app.translator.trans('datlechin-chatgpt.admin.permissions.use_chatgpt_assistant_label'),\n        icon: 'fas fa-comment',\n        permission: 'discussion.useChatGPTAssistant',\n        allowGuest: false,\n      },\n      'start'\n    )\n    .registerPage(ChatGPTSettings);\n});\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","flarum","core","compat","_setPrototypeOf","p","setPrototypeOf","bind","__proto__","ChatGPTSettings","_ExtensionPage","subClass","superClass","_this","_len","arguments","length","args","Array","_key","apply","concat","loading","models","create","constructor","_proto","oninit","vnode","_this2","this","Stream","app","url","attribute","method","then","response","forEach","model","id","m","redraw","content","className","buildSettingComponent","setting","type","label","trans","help","href","target","rel","placeholder","options","default","requireParentTag","limits","max","secondary","submitButton","ExtensionPage","add","registerPermission","icon","permission","allowGuest","registerPage"],"sourceRoot":""}