{"version":3,"sources":["webpack://@therealsujitk/flarum-ext-gifs/./src/forum/helpers/Giphy.js"],"names":["limit","apiKey","getTrendingSearches","url","fetch","then","response","json","content","data","console","error","searches","getTrendingGifs","offset","gifs","getGifs","query","extractGif","gif","gifType","title","setApiKey","key","getLimit"],"mappings":"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","file":"0.js","sourcesContent":["const limit = 20; // The maximum number of gifs per request\nvar apiKey;\n\n/*\n    Function to get an array of trending searches\n */\nexport async function getTrendingSearches() {\n    var searches;\n    var url = 'https://api.giphy.com/v1/trending/searches?api_key=' + apiKey;\n\n    await fetch(url)\n        .then((response) => response.json())\n        .then((content) => {\n            if (typeof content.data === 'undefined') {\n                console.error('Sorry, there was something wrong with the Giphy API Key.');\n                return;\n            }\n\n            searches = content['data'];\n        });\n\n    return searches;\n}\n\n/*\n    Function to get an object of trending GIFs\n */\nexport async function getTrendingGifs(offset = 0, limit = limit) {\n    var gifs;\n\n    var url = 'https://api.giphy.com/v1/gifs/trending?api_key=' + apiKey + '&limit=' + limit + '&offset=' + offset;\n\n    await fetch(url)\n        .then((response) => response.json())\n        .then((content) => {\n            if (typeof content.data === 'undefined') {\n                console.error('Sorry, there was something wrong with the Giphy API Key.');\n                return;\n            }\n\n            gifs = content['data'];\n        });\n\n    return gifs;\n}\n\n/*\n    Funciton to get an object of GIFs\n */\nexport async function getGifs(query, offset = 0, limit = limit) {\n    var gifs;\n    var url =\n        'https://api.giphy.com/v1/gifs/search?api_key=' +\n        apiKey +\n        '&q=' +\n        query +\n        '&limit=' +\n        limit +\n        '&offset=' +\n        offset;\n\n    await fetch(url)\n        .then((response) => response.json())\n        .then((content) => {\n            if (typeof content.data === 'undefined') {\n                console.error('Sorry, there was something wrong with the Giphy API Key.');\n                return;\n            }\n\n            gifs = content['data'];\n        });\n\n    return gifs;\n}\n\n/*\n    Function to extract the url and title from the object\n */\nexport function extractGif(gif) {\n    var gifType = 'downsized';\n    var gif = {\n        title: gif['title'],\n        url: gif['images'][gifType]['url']\n    };\n\n    return gif;\n}\n\n/*\n    Function to set the Giphy API key\n */\nexport function setApiKey(key) {\n    apiKey = key;\n    return true;\n}\n\n/*\n    Function to return the maximum number of gifs per request\n */\nexport function getLimit() {\n    return limit;\n}\n"],"sourceRoot":""}