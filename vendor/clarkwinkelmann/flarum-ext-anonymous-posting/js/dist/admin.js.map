{"version":3,"file":"admin.js","mappings":"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","sources":["webpack://@clarkwinkelmann/anonymous-posting/webpack/bootstrap","webpack://@clarkwinkelmann/anonymous-posting/webpack/runtime/compat get default export","webpack://@clarkwinkelmann/anonymous-posting/webpack/runtime/define property getters","webpack://@clarkwinkelmann/anonymous-posting/webpack/runtime/hasOwnProperty shorthand","webpack://@clarkwinkelmann/anonymous-posting/webpack/runtime/make namespace object","webpack://@clarkwinkelmann/anonymous-posting/external root \"flarum.core.compat['admin/app']\"","webpack://@clarkwinkelmann/anonymous-posting/external root \"flarum.core.compat['common/components/Button']\"","webpack://@clarkwinkelmann/anonymous-posting/./src/admin/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['admin/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","import app from 'flarum/admin/app';\nimport ExtensionPage from 'flarum/admin/components/ExtensionPage';\nimport Button from 'flarum/common/components/Button';\n\nconst avatarsSettingKey = 'anonymous-posting.formulaireAvatars';\nconst translationPrefix = 'clarkwinkelmann-anonymous-posting.admin.settings.';\n\ninterface Avatar {\n    formId: string\n    fieldKey: string\n    fieldValue: string\n    avatarUrl: string\n}\n\napp.initializers.add('anonymous-posting', () => {\n    app.extensionData\n        .for('clarkwinkelmann-anonymous-posting')\n        .registerSetting({\n            setting: 'anonymous-posting.defaultAnonymity',\n            label: app.translator.trans(translationPrefix + 'defaultAnonymity'),\n            type: 'switch',\n        })\n        .registerSetting({\n            setting: 'anonymous-posting.defaultAnonymityWhenAbleToSwitch',\n            type: 'switch',\n            label: app.translator.trans(translationPrefix + 'defaultAnonymityWhenAbleToSwitch'),\n        })\n        .registerSetting({\n            setting: 'anonymous-posting.alwaysAnonymiseEdits',\n            type: 'switch',\n            label: app.translator.trans(translationPrefix + 'alwaysAnonymiseEdits'),\n            help: app.translator.trans(translationPrefix + 'alwaysAnonymiseEditsHelp'),\n        })\n        .registerSetting({\n            setting: 'anonymous-posting.composerHelpTextPosition',\n            type: 'select',\n            options: {\n                visible: app.translator.trans(translationPrefix + 'composerHelpTextPositionVisible'),\n                tooltip: app.translator.trans(translationPrefix + 'composerHelpTextPositionTooltip'),\n                hidden: app.translator.trans(translationPrefix + 'composerHelpTextPositionHidden'),\n            },\n            default: 'visible',\n            label: app.translator.trans(translationPrefix + 'composerHelpTextPosition'),\n            help: app.translator.trans(translationPrefix + 'composerHelpTextPositionHelp'),\n        })\n        .registerSetting(function (this: ExtensionPage) {\n            let avatars: Avatar[];\n\n            try {\n                avatars = JSON.parse(this.setting(avatarsSettingKey)());\n            } catch (e) {\n                // do nothing, we'll reset to something usable\n            }\n\n            // @ts-ignore variable used before assignment, it's fine\n            if (!Array.isArray(avatars)) {\n                avatars = [];\n            }\n\n            return m('.Form-group', [\n                m('label', app.translator.trans(translationPrefix + 'avatars')),\n                m('.helpText', app.translator.trans(translationPrefix + 'avatarsHelp', {\n                    a: m('a', {\n                        href: 'https://kilowhat.net/flarum/extensions/formulaire',\n                        target: '_blank',\n                        rel: 'noopener',\n                    }),\n                })),\n                m('table', [\n                    m('thead', m('tr', [\n                        m('th', app.translator.trans(translationPrefix + 'avatarFormId')),\n                        m('th', app.translator.trans(translationPrefix + 'avatarFieldKey')),\n                        m('th', app.translator.trans(translationPrefix + 'avatarFieldValue')),\n                        m('th', app.translator.trans(translationPrefix + 'avatarAvatarUrl')),\n                        m('th'),\n                    ])),\n                    m('tbody', [\n                        avatars.map((sound, index) => m('tr', [\n                            m('td', m('input.FormControl', {\n                                type: 'text',\n                                value: sound.formId || '',\n                                onchange: (event: InputEvent) => {\n                                    sound.formId = (event.target as HTMLInputElement).value;\n                                    this.setting(avatarsSettingKey)(JSON.stringify(avatars));\n                                },\n                            })),\n                            m('td', m('input.FormControl', {\n                                type: 'text',\n                                value: sound.fieldKey || '',\n                                onchange: (event: InputEvent) => {\n                                    sound.fieldKey = (event.target as HTMLInputElement).value;\n                                    this.setting(avatarsSettingKey)(JSON.stringify(avatars));\n                                },\n                            })),\n                            m('td', m('input.FormControl', {\n                                type: 'text',\n                                value: sound.fieldValue || '',\n                                onchange: (event: InputEvent) => {\n                                    sound.fieldValue = (event.target as HTMLInputElement).value;\n                                    this.setting(avatarsSettingKey)(JSON.stringify(avatars));\n                                },\n                            })),\n                            m('td', m('input.FormControl', {\n                                type: 'text',\n                                value: sound.avatarUrl || '',\n                                onchange: (event: InputEvent) => {\n                                    sound.avatarUrl = (event.target as HTMLInputElement).value;\n                                    this.setting(avatarsSettingKey)(JSON.stringify(avatars));\n                                },\n                            })),\n                            m('td', Button.component({\n                                className: 'Button Button--icon',\n                                icon: 'fas fa-times',\n                                onclick: () => {\n                                    avatars.splice(index, 1);\n\n                                    this.setting(avatarsSettingKey)(avatars.length > 0 ? JSON.stringify(avatars) : null);\n                                },\n                            })),\n                        ])),\n                        m('tr', m('td', {\n                            colspan: 5,\n                        }, Button.component({\n                            className: 'Button Button--block',\n                            onclick: () => {\n                                avatars.push({\n                                    formId: '',\n                                    fieldKey: '',\n                                    fieldValue: '',\n                                    avatarUrl: '',\n                                });\n\n                                this.setting(avatarsSettingKey)(JSON.stringify(avatars));\n                            },\n                        }, app.translator.trans(translationPrefix + 'avatarAdd'))))\n                    ]),\n                ]),\n            ]);\n        })\n        .registerPermission({\n            permission: 'anonymous-posting.use',\n            icon: 'fas fa-user-secret',\n            label: app.translator.trans('clarkwinkelmann-anonymous-posting.admin.permissions.use'),\n        }, 'start')\n        .registerPermission({\n            permission: 'anonymous-posting.reveal',\n            icon: 'fas fa-user-secret',\n            label: app.translator.trans('clarkwinkelmann-anonymous-posting.admin.permissions.reveal'),\n        }, 'moderate')\n        .registerPermission({\n            permission: 'anonymous-posting.moderate',\n            icon: 'fas fa-user-secret',\n            label: app.translator.trans('clarkwinkelmann-anonymous-posting.admin.permissions.moderate'),\n        }, 'moderate');\n});\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","avatarsSettingKey","translationPrefix","app","registerSetting","setting","label","type","help","options","visible","tooltip","hidden","default","avatars","_this","JSON","parse","this","e","Array","isArray","m","href","target","rel","map","sound","index","formId","onchange","event","stringify","fieldKey","fieldValue","avatarUrl","Button","className","icon","onclick","splice","length","colspan","push","registerPermission","permission"],"sourceRoot":""}